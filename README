A trivial golang project for me to continue to learn Go and Docker


# Build and run tests on local machine
./build.sh

# Possibly crosscompile and run within container
# Build uses static compilation flags so we end up with a ~7.5MB container
./dockerize.sh

# Running more than one instance directly and then putting haproxy in front to balance

echo "defaults
    timeout connect 5000
    timeout client  50000
    timeout server  50000

frontend localnodes
    bind *:8080
    mode http
    default_backend nodes

backend nodes
    mode http
    balance roundrobin
    server c1.andyspohn.com docker:8081 check
    server c2.andyspohn.com docker:8082 check" > haproxy.cfg

docker run -d -p 8081:8080 -h 'c1.andyspohn.com' spohnan/ws-test-01
docker run -d -p 8082:8080 -h 'c2.andyspohn.com' spohnan/ws-test-01
haproxy -f haproxy.cfg

# View hostname alternation through haproxy
http://localhost:8080/api/v1/host/

# Stop haproxy and shutdown containers
docker stop `docker ps | grep ws-test-01 | awk '{print $1}'`
